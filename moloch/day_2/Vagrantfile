MCount = 2
VCount = 1
ECount = 1



NET = "192.168.11."
NET_START = 20
ip_admin = "192.168.11.41"

vm_box = 'ubu14'

#prepare ela master nodes list
elamasters = []
(1..MCount).each do |no|
  ip = NET  + (NET_START + 10 + no).to_s
  elamasters.push(ip)
end
captures = []
(1..MCount).each do |no|
  ip = NET  + (NET_START + 20 + no).to_s
  name = 'moloch-' + no.to_s
  captures.push(ip+";"+name)
end
viewers = []
(1..VCount).each do |no|
  ip = NET  + (NET_START + 20 + no).to_s
  name = 'viewer-' + no.to_s
  viewers.push(ip+";"+name)
end

# log ip's and names
time = Time.now
File.open('lastrun.txt','w').puts "# " + time.inspect
File.open('lastrun.txt','a').puts " "

Vagrant.configure('2') do |config|
  config.vm.box = "ubu14"
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
    config.cache.synced_folder_opts = {
      type: :nfs,
      mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
    }
    config.cache.enable :generic, {
    "wget" => { cache_dir: "/var/cache/wget" },
    }
  else
    puts "please do 'vagrant plugin install vagrant-cachier'"
  end
  (1..ECount).each do |boxno|
      name = 'elastic-' + boxno.to_s
      ip = NET  + (NET_START + 30 + boxno).to_s
      File.open('lastrun.txt','a').puts ip+" "+name
      config.vm.define name do |box|
        box.vm.hostname = name
        box.vm.network :private_network, ip: "#{ip}"
        box.vm.provider :virtualbox do |vb|
         vb.customize ["modifyvm", :id, "--memory", "1024"]
         vb.customize ["modifyvm", :id, "--cpus", "2"]
        end
        box.vm.provision "shell", path: "./boxes/scripts/install-salt-minion.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-telegraf.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-elastic.sh", args: "#{ip} #{name} #{'my-first-elastic-cluster'} #{boxno} '#{elamasters.join(",")}' data"
      end
  end # molo loop
  (1..MCount).each do |boxno|
      name = 'moloch-' + boxno.to_s
      ip = NET  + (NET_START + 10 + boxno).to_s
      File.open('lastrun.txt','a').puts ip+" "+name
      config.vm.define name do |box|
        box.vm.hostname = name
        box.vm.network :private_network, ip: "#{ip}"
        box.vm.provider :virtualbox do |vb|
         vb.customize ["modifyvm", :id, "--memory", "1024"]
         vb.customize ["modifyvm", :id, "--cpus", "2"]
        end
        box.vm.provision "shell", path: "./boxes/scripts/install-salt-minion.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-telegraf.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-elastic.sh", args: "#{ip} #{name} #{'my-first-elastic-cluster'} #{boxno} '#{elamasters.join(",")}' master"
        #box.vm.provision "shell", path: "./boxes/scripts/install-moloch-capture.sh"
      end
  end # molo loop
  (1..VCount).each do |boxno|
      name = 'viewer-' + boxno.to_s
      ip = NET  + (NET_START + 20 + boxno).to_s
      File.open('lastrun.txt','a').puts ip+" "+name
      config.vm.define name do |box|
        box.vm.hostname = name
        box.vm.network :private_network, ip: "#{ip}"
        box.vm.provider :virtualbox do |vb|
         vb.customize ["modifyvm", :id, "--memory", "1024"]
         vb.customize ["modifyvm", :id, "--cpus", "1"]
        end
        box.vm.provision "shell", path: "./boxes/scripts/install-salt-minion.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-telegraf.sh", args: "#{ip_admin}"
        box.vm.provision "shell", path: "./boxes/scripts/install-elastic.sh", args: "#{ip} #{name} #{'my-first-elastic-cluster'} #{boxno} '#{elamasters.join(",")}' client"
        if ip == ip_admin
          box.vm.provision "shell", path: "./boxes/scripts/install-influxdb.sh", args: "#{ip_admin}"
          box.vm.provision "shell", path: "./boxes/scripts/install-salt-master.sh", args: "#{ip_admin}"
          box.vm.provision "shell", path: "./boxes/scripts/install-grafana.sh", args: "#{ip_admin}"
          box.vm.provision "shell", path: "./boxes/scripts/install-moloch.sh", args: "'#{captures.join(",")}' '#{viewers.join(",")}'"
          puts "master box is "+ name + " " + ip
        end
        #box.vm.provision "shell", path: "./boxes/scripts/install-moloch-viewer.sh"
      end
  end # viever loop
end
